import { DiagnosisData, DiagnosisResults } from '../stores/diagnosisStore';

export interface ReportTemplate {
  title: string;
  sections: ReportSection[];
  footer: string;
}

export interface ReportSection {
  title: string;
  content: string[];
  charts?: ChartData[];
}

export interface ChartData {
  type: 'bar' | 'pie' | 'line';
  title: string;
  data: any;
}

export class ReportGenerator {
  // Î©îÏù∏ Î≥¥Í≥†ÏÑú ÏÉùÏÑ±
  static generateComprehensiveReport(
    diagnosisData: DiagnosisData, 
    results: DiagnosisResults
  ): ReportTemplate {
    const currentDate = new Date().toLocaleDateString('ko-KR');
    
    return {
      title: `${diagnosisData.companyName} Ï¢ÖÌï© ÏßÑÎã® Î≥¥Í≥†ÏÑú`,
      sections: [
        this.generateExecutiveSummary(diagnosisData, results),
        this.generateCompanyOverview(diagnosisData),
        this.generateDiagnosisResults(results),
        this.generateStrengthsWeaknesses(results),
        this.generateRecommendations(results),
        this.generateImplementationPlan(results),
        this.generateAppendix(diagnosisData)
      ],
      footer: `ÏÉùÏÑ±Ïùº: ${currentDate} | M-Center ÏßÑÎã® ÏãúÏä§ÌÖú`
    };
  }

  // Í≤ΩÏòÅÏßÑ ÏöîÏïΩ
  private static generateExecutiveSummary(
    data: DiagnosisData, 
    results: DiagnosisResults
  ): ReportSection {
    const keyInsights = [
      `${data.companyName}Ïùò Ï¢ÖÌï© ÏßÑÎã® Ï†êÏàòÎäî 100Ï†ê ÎßåÏ†êÏóê ${results.overallScore}Ï†êÏúºÎ°ú ${results.marketPosition} ÏàòÏ§ÄÏûÖÎãàÎã§.`,
      `${data.industry} ÏóÖÍ≥Ñ ÎÇ¥ ÏÑ±Ïû• Ïû†Ïû¨Î†•ÏùÄ ${results.industryGrowth}%Î°ú ÌèâÍ∞ÄÎê©ÎãàÎã§.`,
      `Ï£ºÏöî Í∞ïÏ†ê: ${results.strengths.slice(0, 3).join(', ')}`,
      `ÌïµÏã¨ Í∞úÏÑ†ÏÇ¨Ìï≠: ${results.weaknesses.slice(0, 3).join(', ')}`,
      `Ïö∞ÏÑ†ÏàúÏúÑ Ï∂îÏ≤úÏÇ¨Ìï≠: ${results.recommendations.filter(r => r.priority === 'ÎÜíÏùå').length}Í∞úÏùò Í≥†Ïö∞ÏÑ†ÏàúÏúÑ Ïï°ÏÖò ÏïÑÏù¥ÌÖú`
    ];

    return {
      title: 'Í≤ΩÏòÅÏßÑ ÏöîÏïΩ (Executive Summary)',
      content: keyInsights
    };
  }

  // ÌöåÏÇ¨ Í∞úÏöî
  private static generateCompanyOverview(data: DiagnosisData): ReportSection {
    const overview = [
      `ÌöåÏÇ¨Î™Ö: ${data.companyName}`,
      `ÏóÖÏ¢Ö: ${data.industry}`,
      `ÏÑ§Î¶ΩÎÖÑÎèÑ: ${data.establishedYear}`,
      `Ï°∞ÏßÅ Í∑úÎ™®: ${data.companySize}`,
      `ÎπÑÏ¶àÎãàÏä§ Î™®Îç∏: ${data.businessModel}`,
      `Ïó∞ Îß§Ï∂ú Í∑úÎ™®: ${data.annualRevenue}`,
      '',
      'Ï£ºÏöî Ï†úÌíà/ÏÑúÎπÑÏä§:',
      data.mainProducts,
      '',
      'Î™©Ìëú ÏãúÏû•:',
      data.targetMarket
    ];

    return {
      title: 'ÌöåÏÇ¨ Í∞úÏöî',
      content: overview
    };
  }

  // ÏßÑÎã® Í≤∞Í≥º
  private static generateDiagnosisResults(results: DiagnosisResults): ReportSection {
    const diagnosticResults = [
      `Ï¢ÖÌï© ÏßÑÎã® Ï†êÏàò: ${results.overallScore}/100`,
      `ÏãúÏû• ÏúÑÏπò: ${results.marketPosition}`,
      `ÏóÖÍ≥Ñ ÏÑ±Ïû•Î•†: ${results.industryGrowth}%`,
      `Í≤ΩÏüÅ Í∞ïÎèÑ: ${results.competitiveness}`,
      '',
      'ÏÑ∏Î∂Ä Î∂ÑÏÑù Í≤∞Í≥º:',
      `‚Ä¢ ÎπÑÏ¶àÎãàÏä§ Î™®Îç∏ Ï†ÅÌï©ÏÑ±: ${results.detailedAnalysis.businessModel.score}/100`,
      `  ${results.detailedAnalysis.businessModel.feedback}`,
      '',
      `‚Ä¢ ÏãúÏû• Ïù¥Ìï¥ÎèÑ: ${results.detailedAnalysis.market.score}/100`,
      `  ${results.detailedAnalysis.market.feedback}`,
      '',
      `‚Ä¢ Ïö¥ÏòÅ Ï≤¥Í≥Ñ: ${results.detailedAnalysis.operation.score}/100`,
      `  ${results.detailedAnalysis.operation.feedback}`
    ];

    const chartData: ChartData[] = [
      {
        type: 'bar',
        title: 'Î∂ÑÏïºÎ≥Ñ Ï†êÏàò',
        data: {
          labels: ['ÎπÑÏ¶àÎãàÏä§ Î™®Îç∏', 'ÏãúÏû• Ïù¥Ìï¥ÎèÑ', 'Ïö¥ÏòÅ Ï≤¥Í≥Ñ'],
          values: [
            results.detailedAnalysis.businessModel.score,
            results.detailedAnalysis.market.score,
            results.detailedAnalysis.operation.score
          ]
        }
      }
    ];

    return {
      title: 'ÏßÑÎã® Í≤∞Í≥º Î∂ÑÏÑù',
      content: diagnosticResults,
      charts: chartData
    };
  }

  // Í∞ïÏ†ê Î∞è ÏïΩÏ†ê Î∂ÑÏÑù
  private static generateStrengthsWeaknesses(results: DiagnosisResults): ReportSection {
    const analysis = [
      'Ï£ºÏöî Í∞ïÏ†ê:',
      ...results.strengths.map((strength, index) => `${index + 1}. ${strength}`),
      '',
      'Í∞úÏÑ† ÌïÑÏöî ÏÇ¨Ìï≠:',
      ...results.weaknesses.map((weakness, index) => `${index + 1}. ${weakness}`)
    ];

    return {
      title: 'Í∞ïÏ†ê Î∞è ÏïΩÏ†ê Î∂ÑÏÑù',
      content: analysis
    };
  }

  // Ï∂îÏ≤úÏÇ¨Ìï≠
  private static generateRecommendations(results: DiagnosisResults): ReportSection {
    const recommendations = [
      'Ïö∞ÏÑ†ÏàúÏúÑÎ≥Ñ Ï∂îÏ≤úÏÇ¨Ìï≠:',
      ''
    ];

    // ÎÜíÏùÄ Ïö∞ÏÑ†ÏàúÏúÑ Ï∂îÏ≤úÏÇ¨Ìï≠
    const highPriority = results.recommendations.filter(r => r.priority === 'ÎÜíÏùå');
    if (highPriority.length > 0) {
      recommendations.push('üî¥ ÎÜíÏùÄ Ïö∞ÏÑ†ÏàúÏúÑ:');
      highPriority.forEach((rec, index) => {
        recommendations.push(`${index + 1}. [${rec.category}] ${rec.action}`);
        recommendations.push(`   Ïã§Ìñâ Í∏∞Í∞Ñ: ${rec.timeline}`);
        recommendations.push('');
      });
    }

    // Î≥¥ÌÜµ Ïö∞ÏÑ†ÏàúÏúÑ Ï∂îÏ≤úÏÇ¨Ìï≠
    const mediumPriority = results.recommendations.filter(r => r.priority === 'Î≥¥ÌÜµ');
    if (mediumPriority.length > 0) {
      recommendations.push('üü° Î≥¥ÌÜµ Ïö∞ÏÑ†ÏàúÏúÑ:');
      mediumPriority.forEach((rec, index) => {
        recommendations.push(`${index + 1}. [${rec.category}] ${rec.action}`);
        recommendations.push(`   Ïã§Ìñâ Í∏∞Í∞Ñ: ${rec.timeline}`);
        recommendations.push('');
      });
    }

    return {
      title: 'Ï∂îÏ≤úÏÇ¨Ìï≠',
      content: recommendations
    };
  }

  // Ïã§Ìñâ Í≥ÑÌöç
  private static generateImplementationPlan(results: DiagnosisResults): ReportSection {
    const plan = [
      'Ïã§Ìñâ Î°úÎìúÎßµ:',
      '',
      '1Í∞úÏõî ÎÇ¥ Ï∞©Ïàò Ìï≠Î™©:',
      ...results.recommendations
        .filter(r => r.timeline.includes('1Í∞úÏõî'))
        .map(r => `‚Ä¢ ${r.category}: ${r.action}`),
      '',
      '3Í∞úÏõî ÎÇ¥ ÏôÑÎ£å Ìï≠Î™©:',
      ...results.recommendations
        .filter(r => r.timeline.includes('3Í∞úÏõî'))
        .map(r => `‚Ä¢ ${r.category}: ${r.action}`),
      '',
      '6Í∞úÏõî ÎÇ¥ ÏôÑÎ£å Ìï≠Î™©:',
      ...results.recommendations
        .filter(r => r.timeline.includes('6Í∞úÏõî'))
        .map(r => `‚Ä¢ ${r.category}: ${r.action}`),
      '',
      'ÏÑ±Í≥µ ÏßÄÌëú (KPI):',
      '‚Ä¢ Îß§Ï∂ú ÏÑ±Ïû•Î•†: Ï†ÑÎÖÑ ÎåÄÎπÑ 20% Ï¶ùÍ∞Ä',
      '‚Ä¢ Í≥†Í∞ù ÎßåÏ°±ÎèÑ: 85% Ïù¥ÏÉÅ Ïú†ÏßÄ',
      '‚Ä¢ Ïö¥ÏòÅ Ìö®Ïú®ÏÑ±: ÌîÑÎ°úÏÑ∏Ïä§ ÏûêÎèôÌôîÏú® 70% Îã¨ÏÑ±',
      '‚Ä¢ ÎîîÏßÄÌÑ∏ Ï†ÑÌôòÏú®: ÌïµÏã¨ ÏóÖÎ¨¥ 80% ÎîîÏßÄÌÑ∏Ìôî'
    ];

    return {
      title: 'Ïã§Ìñâ Í≥ÑÌöç',
      content: plan
    };
  }

  // Î∂ÄÎ°ù
  private static generateAppendix(data: DiagnosisData): ReportSection {
    const appendix = [
      'Îã¥ÎãπÏûê Ï†ïÎ≥¥:',
      `‚Ä¢ ÏÑ±Î™Ö: ${data.contactName}`,
      `‚Ä¢ ÏßÅÏ±Ö: ${data.position}`,
      `‚Ä¢ Ïù¥Î©îÏùº: ${data.contactEmail}`,
      `‚Ä¢ Ïó∞ÎùΩÏ≤ò: ${data.contactPhone}`,
      '',
      'Ï£ºÏöî ÎèÑÏ†ÑÍ≥ºÏ†ú:',
      ...data.mainChallenges.map((challenge, index) => `${index + 1}. ${challenge}`),
      '',
      'ÎπÑÏ¶àÎãàÏä§ Î™©Ìëú:',
      ...data.businessGoals.map((goal, index) => `${index + 1}. ${goal}`),
      '',
      'ÏãúÍ∏âÌïú Ìï¥Í≤∞ Í≥ºÏ†ú:',
      data.urgentIssues,
      '',
      'Í∏∞ÎåÄÌïòÎäî Í≤∞Í≥º:',
      data.expectedOutcome
    ];

    if (data.additionalInfo) {
      appendix.push('', 'Ï∂îÍ∞Ä Ï†ïÎ≥¥:', data.additionalInfo);
    }

    return {
      title: 'Î∂ÄÎ°ù',
      content: appendix
    };
  }

  // ÌÖçÏä§Ìä∏ Î≥¥Í≥†ÏÑú ÏÉùÏÑ±
  static generateTextReport(template: ReportTemplate): string {
    let report = `${template.title}\n`;
    report += '='.repeat(template.title.length) + '\n\n';

    template.sections.forEach((section, index) => {
      report += `${index + 1}. ${section.title}\n`;
      report += '-'.repeat(section.title.length + 3) + '\n';
      
      section.content.forEach(line => {
        report += line + '\n';
      });
      
      report += '\n';
    });

    report += '\n' + template.footer + '\n';
    
    return report;
  }

  // HTML Î≥¥Í≥†ÏÑú ÏÉùÏÑ±
  static generateHTMLReport(template: ReportTemplate): string {
    let html = `
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${template.title}</title>
    <style>
        body { 
            font-family: 'Arial', sans-serif; 
            line-height: 1.6; 
            max-width: 800px; 
            margin: 0 auto; 
            padding: 20px;
            background-color: #f5f5f5;
        }
        .report-container {
            background: white;
            padding: 40px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 { 
            color: #2563eb; 
            border-bottom: 3px solid #2563eb; 
            padding-bottom: 10px;
            text-align: center;
        }
        h2 { 
            color: #1e40af; 
            margin-top: 30px;
            margin-bottom: 15px;
        }
        .section { 
            margin-bottom: 30px; 
            padding: 20px;
            background: #f8fafc;
            border-left: 4px solid #3b82f6;
            border-radius: 4px;
        }
        .footer { 
            text-align: center; 
            margin-top: 40px; 
            padding-top: 20px;
            border-top: 1px solid #e5e7eb;
            color: #6b7280;
        }
        ul { padding-left: 20px; }
        li { margin-bottom: 8px; }
        .highlight { 
            background-color: #dbeafe; 
            padding: 15px; 
            border-radius: 4px; 
            margin: 10px 0;
        }
        .priority-high { color: #dc2626; font-weight: bold; }
        .priority-medium { color: #d97706; font-weight: bold; }
    </style>
</head>
<body>
    <div class="report-container">
        <h1>${template.title}</h1>
`;

    template.sections.forEach(section => {
      html += `        <div class="section">
            <h2>${section.title}</h2>
`;
      
      section.content.forEach(line => {
        if (line.trim() === '') {
          html += '            <br>\n';
        } else if (line.includes('üî¥')) {
          html += `            <p class="priority-high">${line}</p>\n`;
        } else if (line.includes('üü°')) {
          html += `            <p class="priority-medium">${line}</p>\n`;
        } else if (line.includes(':') && !line.includes('‚Ä¢')) {
          html += `            <p><strong>${line}</strong></p>\n`;
        } else {
          html += `            <p>${line}</p>\n`;
        }
      });
      
      html += '        </div>\n';
    });

    html += `        <div class="footer">
            <p>${template.footer}</p>
        </div>
    </div>
</body>
</html>`;

    return html;
  }

  // ÌååÏùº Îã§Ïö¥Î°úÎìú Ìï®Ïàò
  static downloadReport(content: string, filename: string, type: 'text' | 'html' = 'text') {
    const mimeType = type === 'html' ? 'text/html' : 'text/plain';
    const extension = type === 'html' ? '.html' : '.txt';
    
    const blob = new Blob([content], { type: `${mimeType};charset=utf-8` });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    
    link.href = url;
    link.download = filename + extension;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  }

  // Ïù¥Î©îÏùºÎ°ú Î≥¥Í≥†ÏÑú Ï†ÑÏÜ° (ÏãúÎÆ¨Î†àÏù¥ÏÖò)
  static async sendReportByEmail(
    reportContent: string,
    recipientEmail: string,
    companyName: string
  ): Promise<boolean> {
    try {
      // Ïã§Ï†ú Íµ¨ÌòÑÏóêÏÑúÎäî Ïù¥Î©îÏùº ÏÑúÎπÑÏä§ API Ìò∏Ï∂ú
      console.log(`Sending report to ${recipientEmail} for ${companyName}`);
      
      // Ïù¥Î©îÏùº Ï†ÑÏÜ° ÏãúÎÆ¨Î†àÏù¥ÏÖò
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ï†ÑÏÜ°Îê®ÏùÑ ÏãúÎÆ¨Î†àÏù¥ÏÖò
      return true;
    } catch (error) {
      console.error('Failed to send email:', error);
      return false;
    }
  }
}

// Î≥¥Í≥†ÏÑú ÌÖúÌîåÎ¶ø Í¥ÄÎ¶¨
export class ReportTemplateManager {
  private static templates: Map<string, Partial<ReportTemplate>> = new Map();

  // Ïª§Ïä§ÌÖÄ ÌÖúÌîåÎ¶ø Îì±Î°ù
  static registerTemplate(name: string, template: Partial<ReportTemplate>) {
    this.templates.set(name, template);
  }

  // ÏóÖÏ¢ÖÎ≥Ñ ÎßûÏ∂§ ÌÖúÌîåÎ¶ø
  static getIndustryTemplate(industry: string): Partial<ReportTemplate> {
    const industryTemplates: Record<string, Partial<ReportTemplate>> = {
      'technology': {
        title: 'IT/Í∏∞Ïà† Í∏∞ÏóÖ ÏßÑÎã® Î≥¥Í≥†ÏÑú',
        sections: [
          {
            title: 'Í∏∞Ïà† ÌòÅÏã† Î∂ÑÏÑù',
            content: [
              'ÌòÑÏû¨ Í∏∞Ïà† Ïä§ÌÉùÏùò Í≤ΩÏüÅÎ†•ÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§.',
              'R&D Ìà¨Ïûê ÌòÑÌô©Í≥º ÌòÅÏã† Ïó≠ÎüâÏùÑ Î∂ÑÏÑùÌï©ÎãàÎã§.',
              'Í∏∞Ïà† Ìä∏Î†åÎìú ÎåÄÏùë Îä•Î†•ÏùÑ ÏßÑÎã®Ìï©ÎãàÎã§.'
            ]
          }
        ]
      },
      'manufacturing': {
        title: 'Ï†úÏ°∞ÏóÖ ÏßÑÎã® Î≥¥Í≥†ÏÑú',
        sections: [
          {
            title: 'ÏÉùÏÇ∞ Ìö®Ïú®ÏÑ± Î∂ÑÏÑù',
            content: [
              'ÏÉùÏÇ∞ Í≥µÏ†ïÏùò Ìö®Ïú®ÏÑ±ÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§.',
              'ÌíàÏßà Í¥ÄÎ¶¨ ÏãúÏä§ÌÖúÏùÑ ÏßÑÎã®Ìï©ÎãàÎã§.',
              'Í≥µÍ∏âÎßù ÏµúÏ†ÅÌôî Î∞©ÏïàÏùÑ Ï†úÏãúÌï©ÎãàÎã§.'
            ]
          }
        ]
      },
      'retail': {
        title: 'ÏÜåÎß§ÏóÖ ÏßÑÎã® Î≥¥Í≥†ÏÑú',
        sections: [
          {
            title: 'Í≥†Í∞ù Í≤ΩÌóò Î∂ÑÏÑù',
            content: [
              'Ïò¥ÎãàÏ±ÑÎÑê Ï†ÑÎûµÏùò Ìö®Í≥ºÏÑ±ÏùÑ ÌèâÍ∞ÄÌï©ÎãàÎã§.',
              'Í≥†Í∞ù ÏÑúÎπÑÏä§ ÌíàÏßàÏùÑ ÏßÑÎã®Ìï©ÎãàÎã§.',
              'Ïû¨Í≥† Í¥ÄÎ¶¨ Ìö®Ïú®ÏÑ±ÏùÑ Î∂ÑÏÑùÌï©ÎãàÎã§.'
            ]
          }
        ]
      }
    };

    return industryTemplates[industry] || {};
  }
} 